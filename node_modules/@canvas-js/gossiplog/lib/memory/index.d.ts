import { Bound } from "@canvas-js/okra";
import { AbstractGossipLog, GossipLogInit, ReadOnlyTransaction, ReadWriteTransaction } from "../AbstractGossipLog.js";
export declare class GossipLog<Payload, Result> extends AbstractGossipLog<Payload, Result> {
    private readonly messages;
    private readonly heads;
    private readonly ancestors;
    static open<Payload, Result>(init: GossipLogInit<Payload, Result>): Promise<GossipLog<Payload, Result>>;
    private readonly queue;
    private readonly incomingSyncPeers;
    private readonly outgoingSyncPeers;
    private constructor();
    close(): Promise<void>;
    entries(lowerBound?: Bound<Uint8Array> | null, upperBound?: Bound<Uint8Array> | null, options?: {
        reverse?: boolean;
    }): AsyncIterable<[key: Uint8Array, value: Uint8Array]>;
    read<T>(callback: (txn: ReadOnlyTransaction) => Promise<T>, options?: {
        targetId?: string;
    }): Promise<T>;
    write<T>(callback: (txn: ReadWriteTransaction) => Promise<T>, options?: {
        sourceId?: string;
    }): Promise<T>;
}
