import type { Codec } from 'protons-runtime';
import type { Uint8ArrayList } from 'uint8arraylist';
export interface Node {
    level: number;
    key: Uint8Array;
    hash: Uint8Array;
    value?: Uint8Array;
}
export declare namespace Node {
    const codec: () => Codec<Node>;
    const encode: (obj: Partial<Node>) => Uint8Array;
    const decode: (buf: Uint8Array | Uint8ArrayList) => Node;
}
export interface Request {
    getRoot?: Request.GetRootRequest;
    getNode?: Request.GetNodeRequest;
    getChildren?: Request.GetChildrenRequest;
}
export declare namespace Request {
    interface GetRootRequest {
    }
    namespace GetRootRequest {
        const codec: () => Codec<GetRootRequest>;
        const encode: (obj: Partial<GetRootRequest>) => Uint8Array;
        const decode: (buf: Uint8Array | Uint8ArrayList) => GetRootRequest;
    }
    interface GetNodeRequest {
        level: number;
        key: Uint8Array;
    }
    namespace GetNodeRequest {
        const codec: () => Codec<GetNodeRequest>;
        const encode: (obj: Partial<GetNodeRequest>) => Uint8Array;
        const decode: (buf: Uint8Array | Uint8ArrayList) => GetNodeRequest;
    }
    interface GetChildrenRequest {
        level: number;
        key: Uint8Array;
    }
    namespace GetChildrenRequest {
        const codec: () => Codec<GetChildrenRequest>;
        const encode: (obj: Partial<GetChildrenRequest>) => Uint8Array;
        const decode: (buf: Uint8Array | Uint8ArrayList) => GetChildrenRequest;
    }
    const codec: () => Codec<Request>;
    const encode: (obj: Partial<Request>) => Uint8Array;
    const decode: (buf: Uint8Array | Uint8ArrayList) => Request;
}
export interface Response {
    getRoot?: Response.GetRootResponse;
    getNode?: Response.GetNodeResponse;
    getChildren?: Response.GetChildrenResponse;
}
export declare namespace Response {
    interface GetRootResponse {
        root?: Node;
    }
    namespace GetRootResponse {
        const codec: () => Codec<GetRootResponse>;
        const encode: (obj: Partial<GetRootResponse>) => Uint8Array;
        const decode: (buf: Uint8Array | Uint8ArrayList) => GetRootResponse;
    }
    interface GetNodeResponse {
        node?: Node;
    }
    namespace GetNodeResponse {
        const codec: () => Codec<GetNodeResponse>;
        const encode: (obj: Partial<GetNodeResponse>) => Uint8Array;
        const decode: (buf: Uint8Array | Uint8ArrayList) => GetNodeResponse;
    }
    interface GetChildrenResponse {
        children: Node[];
    }
    namespace GetChildrenResponse {
        const codec: () => Codec<GetChildrenResponse>;
        const encode: (obj: Partial<GetChildrenResponse>) => Uint8Array;
        const decode: (buf: Uint8Array | Uint8ArrayList) => GetChildrenResponse;
    }
    const codec: () => Codec<Response>;
    const encode: (obj: Partial<Response>) => Uint8Array;
    const decode: (buf: Uint8Array | Uint8ArrayList) => Response;
}
