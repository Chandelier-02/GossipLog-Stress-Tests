import { Stream } from "@libp2p/interface";
import { Uint8ArrayList } from "uint8arraylist";
import type { Key, Node, Source } from "@canvas-js/okra";
import * as Sync from "#protocols/sync";
export declare function decodeResponses(source: AsyncIterable<Uint8ArrayList>): AsyncGenerator<Sync.Response, void, unknown>;
export declare function encodeRequests(source: AsyncIterable<Sync.Request>): AsyncGenerator<Uint8Array, void, unknown>;
export declare class Client implements Source {
    readonly stream: Stream;
    private readonly responses;
    private readonly requests;
    private readonly log;
    constructor(stream: Stream);
    end(): void;
    getRoot(): Promise<Node>;
    getNode(level: number, key: Key): Promise<Node | null>;
    getChildren(level: number, key: Key): Promise<Node[]>;
    private get;
}
