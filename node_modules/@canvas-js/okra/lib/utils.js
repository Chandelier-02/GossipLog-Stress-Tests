export function assert(condition, message, ...args) {
    if (!condition) {
        if (args && args.length > 0) {
            console.error(...args);
        }
        throw new Error(message ?? "Internal error");
    }
}
export function lessThan(a, b) {
    if (a === null || b === null) {
        return b !== null;
    }
    let x = a.length;
    let y = b.length;
    for (let i = 0, len = Math.min(x, y); i < len; ++i) {
        if (a[i] !== b[i]) {
            x = a[i];
            y = b[i];
            break;
        }
    }
    return x < y;
}
export const equalArrays = (a, b) => a.length === b.length && a.every((byte, i) => byte === b[i]);
export function equalKeys(a, b) {
    if (a === null || b === null) {
        return a === null && b === null;
    }
    else {
        return equalArrays(a, b);
    }
}
export const equalNodes = (a, b) => a.level === b.level && equalKeys(a.key, b.key) && equalArrays(a.hash, b.hash);
export async function collect(iter) {
    const values = [];
    for await (const value of iter) {
        values.push(value);
    }
    return values;
}
