import { IDBPDatabase } from "idb";
import { Tree, Metadata, Node, Key, Bound } from "@canvas-js/okra";
import { IDBStore } from "./store.js";
export declare class IDBTree extends Tree {
    readonly store: IDBStore;
    static open(db: IDBPDatabase, storeName: string, options?: Partial<Metadata>): Promise<IDBTree>;
    private constructor();
    get(key: Uint8Array): Promise<Uint8Array | null>;
    set(key: Uint8Array, value: Uint8Array): Promise<void>;
    delete(key: Uint8Array): Promise<void>;
    getRoot(): Promise<Node>;
    getNode(level: number, key: Key): Promise<Node | null>;
    getChildren(level: number, key: Key): Promise<Node[]>;
    nodes(level: number, lowerBound?: Bound<Key> | null, upperBound?: Bound<Key> | null, { reverse }?: {
        reverse?: boolean | undefined;
    }): AsyncGenerator<Node, void, undefined>;
    entries(lowerBound?: Bound<Uint8Array> | null, upperBound?: Bound<Uint8Array> | null, { reverse }?: {
        reverse?: boolean | undefined;
    }): AsyncGenerator<[Uint8Array, Uint8Array]>;
}
//# sourceMappingURL=tree.d.ts.map